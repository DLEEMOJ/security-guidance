<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="management-access">
  <title>Management access</title>
  <topic id="the-base-principle">
    <title>The base principle</title>
    <body>
      <p>Management or administrative access <b>must</b> be limited to authorised authenticated users and utilise multi-factor authentication wherever possible.</p>
    </body>
  </topic>
  <topic id="application-program-interface-api">
    <title>Application Program Interface (API)</title>
    <body>
      <p>APIs are preferred over Secure Shell (SSH) connections, as by comparison they generally offer greater technical security limitations without the need for parsing commands.</p>
    </body>
  </topic>
  <topic id="automated-diagnostic-data-collection">
    <title>Automated diagnostic data collection</title>
    <body>
      <p>It should be exceptional to directly administer a server/node when adequate diagnositic data collection sends underlying technical data to a place where it can be correlated and analysed.</p>
    </body>
  </topic>
  <topic id="pre-defined-pre-audited">
    <title>Pre-defined, pre-audited</title>
    <body>
      <p>Tools such as <xref href="https://aws.amazon.com/systems-manager/" format="html" scope="external">Systems Manager</xref> and comparable techniques over preferred over manual intervention (such as human interaction over SSH) as the intervention path can be carefully designed to avoid human error and effectively instruct pre-audited actions to be taken on an administrator's behalf.</p>
    </body>
  </topic>
  <topic id="secure-shell-ssh">
    <title>Secure Shell (SSH)</title>
    <body>
      <p>Use of bastion or 'jump' boxes for access into systems is a useful technical security design that also helps 'choke' and control such sessions.</p>
      <p>Through immutable infrastructure and server design, state-less cluster expansion/contraction and automated diagnostic data capture the need to SSH into a server/node should be increasingly less common.</p>
      <p>It should be exceptional for an individual to login to a server/node via SSH and execute commands with elevated privledges (typically, <codeph>root</codeph>).</p>
    </body>
    <topic id="using-ssh">
      <title>Using SSH</title>
      <body>
        <p>SSH must be strictly controlled, and environments should be segregated so that no single bastion or 'jump' SSH server can access both production and non-production accounts.</p>
        <p>SSH shells must be limited to users who need shell (by comparison to users who will use SSH as a port forwarding tunnel).</p>
        <p>Joiners/Movers/Leavers processes must be strictly enforced (optimally, automated) on SSH servers as they are a critical and priviledged access method.</p>
        <p>SSH should not be password-based, and should use individually created and purposed SSH keypairs. <i>Private keys must not be shared or re-used</i>.</p>
      </body>
    </topic>
  </topic>
  <topic id="feedback" conref="conrefs.dita#feedback"><title/></topic>
</topic>
